<?xml version="1.0" encoding="UTF-8"?>
<project name="TLA+ Tools" default="default">

	<!-- load property file -->
	<loadproperties srcfile="project.properties" />

	<!-- linking with system properties -->
	<property environment="env" />

	<!-- setup classpath -->
	<path id="project.classpath">

	</path>

	<!-- timestamp -->
	<tstamp>
		<format property="TODAY" pattern="yyyy-MM-dd" locale="en,US" />
	</tstamp>

	<taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
		<classpath>
			<pathelement location="lib/aspectjtools.jar" />
		</classpath>
	</taskdef>

	<target name="info" description="Prints information">
		<echo message="ANT_HOME     : ${env.ANT_HOME}" />
		<echo message="Ant Version  : ${ant.version}" />
		<echo message="Java Version : ${ant.java.version}" />
		<echo message="JavaCC_HOME  : ${env.JAVACC_HOME}" />
	</target>

	<target name="default" depends="info" description="Default">
		<antcall target="compile" inheritall="true" inheritrefs="true" />
		<antcall target="compile-aj" inheritall="true" inheritrefs="true" />
		<antcall target="test" inheritall="true" inheritrefs="true" />
		<antcall target="dist" inheritall="true" inheritrefs="true" />
		<antcall target="test-dist" inheritall="true" inheritrefs="true" />
	</target>

	<target name="default-release" depends="info" description="Produces a release">
		<antcall target="compile" inheritall="true" inheritrefs="true" />
		<antcall target="dist-mixed-zip" inheritall="true" inheritrefs="true" />
	</target>



	<target name="clean" description="Cleans the compilation output directory" unless="noclean">
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${class.dir}" includes="*/**" />
		</delete>
	</target>

	<target name="compile" depends="clean" description="Compile">
		<!-- compile -->
		<mkdir dir="${class.dir}" />
		<javac srcdir="${src.dir}" destdir="${class.dir}" debug="true" verbose="false" source="1.5" target="1.5">
			<!-- compilerarg value="-Xlint:deprecation"/-->
			<classpath refid="project.classpath" />
		</javac>

		<!-- copy the resource files -->
		<copy todir="${class.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
				<exclude name="**/*.~*" />
				<exclude name="**/*##*" />
			</fileset>
		</copy>

	</target>

	<target name="compile-aj" depends="compile" if="withaj">
		<!-- compile aspectj related class files -->
		<iajc destdir="${class.dir}" sourceRoots="${src-aj.dir}" debug="true" source="1.5" target="1.5">
			<classpath refid="project.classpath" />
			<classpath>
				<pathelement location="lib/aspectjrt.jar" />
				<pathelement location="lib/aspectjtools.jar" />
				<pathelement path="${class.dir}" />
			</classpath>
		</iajc>
		<!-- copy the resource files -->
		<copy todir="${class.dir}">
			<fileset dir="${src-aj.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.aj" />
				<exclude name="**/*.java" />
				<exclude name="**/*.~*" />
				<exclude name="**/*##*" />
			</fileset>
		</copy>
		<!-- These files are requried for load time weaving and during runtime -->
		<copy todir="${class.dir}/lib">
			<fileset dir="lib/">
				<include name="aspectjrt.jar" />
				<include name="aspectjweaver.jar" />
			</fileset>
		</copy>
	</target>

	<target name="dist" description="Build a distribution">
		<!-- create a JAR file for the users -->
		<mkdir dir="${dist.dir}" />
		<jar destfile="${dist.file}">
			<fileset dir="${class.dir}" includes="**/*" />
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Title" value="TLA+ Tools" />
				<attribute name="Implementation-Version" value="${version} ${TODAY}" />
				<attribute name="Implementation-Vendor" value="Microsoft Corp." />
			</manifest>
		</jar>
	</target>

	<target name="test" description="Executes accompining unit tests" unless="skip.tests">
		<!-- compile unit tests -->
		<mkdir dir="${test.class.dir}" />
		<javac srcdir="${test.dir}" destdir="${test.class.dir}" debug="true" verbose="false" source="1.5" target="1.5">
			<classpath refid="project.classpath" />
			<classpath>
				<pathelement location="lib/junit-4.8.2.jar" />
				<pathelement path="${class.dir}" />
			</classpath>
		</javac>
		<!-- copy class.dir to path with whitespace -->
		<!-- this is required by some tests to make sense -->
		<!-- even throw a non digit in -->
		<property name="ws.class.dir" value="TLA+ Tools" />
		<copy todir="${ws.class.dir}">
			<fileset dir="${class.dir}" />
		</copy>
		<!-- run junit tests -->
		<mkdir dir="${test.reports}" />
		<junit printsummary="yes" haltonfailure="no" haltonerror="no">
			<classpath refid="project.classpath" />
			<classpath>
				<pathelement location="lib/junit-4.8.2.jar" />
				<pathelement path="${ws.class.dir}" />
				<pathelement path="${test.class.dir}" />
			</classpath>
			<formatter type="xml" />
			<batchtest fork="yes" todir="${test.reports}">
				<fileset dir="${test.dir}">
					<include name="**/*Test*.java" />
					<exclude name="**/TestDriver.java" />
					<exclude name="**/TestDriver2.java" />
					<exclude name="**/AllTests.java" />
				</fileset>
			</batchtest>
		</junit>

		<!-- remove copied class.dir -->
		<delete dir="${ws.class.dir}" deleteonexit="true"/>
	</target>

	<target name="test-dist" description="Executes accompining unit tests on jar file" depends="dist" unless="skip.tests">
		<!-- compile unit tests -->
		<mkdir dir="${test.class.dir}" />
		<javac srcdir="${test.dir}" destdir="${test.class.dir}" debug="true" verbose="false" source="1.5" target="1.5">
			<classpath refid="project.classpath" />
			<classpath>
				<pathelement location="lib/junit-4.8.2.jar" />
				<pathelement path="${class.dir}" />
			</classpath>
		</javac>
		<!-- copy class.dir to path with whitespace -->
		<!-- this is required by some tests to make sense -->
		<!-- even throw a non digit in -->
		<property name="ws.class.dir" value="TLA+ Tools" />
		<copy todir="${ws.class.dir}">
			<fileset dir="${class.dir}" />
		</copy>
		<!-- run junit tests on tlatools.jar -->
		<mkdir dir="${test.reports}/onJar" />
		<junit printsummary="yes" haltonfailure="no" haltonerror="no">
			<classpath refid="project.classpath" />
			<classpath>
				<pathelement location="lib/junit-4.8.2.jar" />
				<pathelement location="${dist.file}" />
				<pathelement path="${test.class.dir}" />
			</classpath>

			<formatter type="xml" />

			<batchtest fork="yes" todir="${test.reports}/onJar">
				<fileset dir="${test.dir}">
					<include name="**/*Test*.java" />
					<exclude name="**/TestDriver.java" />
					<exclude name="**/TestDriver2.java" />
					<exclude name="**/AllTests.java" />
				</fileset>
			</batchtest>
		</junit>

		<!-- remove copied class.dir -->
		<delete dir="${ws.class.dir}" deleteonexit="true"/>
	</target>
	
	<target name="dist-mixed-jar" description="Build a distribution" depends="default">
		<!-- create a JAR file for the users -->
		<jar destfile="${dist-mixed.file.jar}">
			<fileset dir="${class.dir}" includes="**/*" />
			<zipfileset dir="${src.dir}" includes="**/*.java" />
			<zipfileset dir="${doc.dir}">
				<include name="README"/>
				<include name="License.txt"/>
			</zipfileset>
			<zipfileset dir="${examples.dir}" includes="**/*" prefix="examples">
				<include name="**/*"/>
				<exclude name=".project"/>
			</zipfileset>

			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Implementation-Title" value="TLA+ Tools" />
				<attribute name="Implementation-Version" value="${version} ${TODAY}" />
				<attribute name="Implementation-Vendor" value="Microsoft Corp." />
			</manifest>
		</jar>
	</target>


	<target name="dist-mixed-zip" description="Build a distribution" depends="default">
		<!-- create a zip file for the users and developers-->
		<zip destfile="${dist-mixed.file}">
			<zipfileset dir="${src.dir}" includes="**/*.java" prefix="tla" />
			<zipfileset dir="${class.dir}" includes="**/*" prefix="tla" />
			<zipfileset dir="${doc.dir}" prefix="tla">
				<include name="README"/>
				<include name="License.txt"/>
			</zipfileset>
			<zipfileset dir="${examples.dir}" includes="**/*" prefix="tla/examples">
				<include name="**/*"/>
				<exclude name=".project"/>
			</zipfileset>

		</zip>
	</target>



	<target name="javacc" description="Generates JavaCC based Parser">
		<mkdir dir="${srcgen.dir}"/>
		<!-- generates the parser -->
		<javacc target="javacc/tla+.jj" outputdirectory="${srcgen.dir}" javacchome="${env.JAVACC_HOME}" />
	</target>

</project>
